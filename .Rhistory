plot(x, y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
?qpois
plot(x, y)
> set.seed(10)
> x <- rbinom(10, 10, 0.5)
> e <- rnorm(10, 0, 20)
> y <- 0.5 + 2 * x + e
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
set.seed(9)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
set.seed(8)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
plot(y, x)
x <- seq(0, 6, 0.4)
x
y <- read.csv("C:/Users/Andy/Desktop/y.txt", header=FALSE)
View(y)
y <- y
y <- vector(y)
y <- matrix(y)
model <- lm(y~x)
y <- as.Double(y)
?as
y <- as.Integer(y)
y <- as.integer(y)
y <- read.csv("C:/Users/Andy/Desktop/y.txt", header=FALSE)
View(y)
y1 <- as.double(y)
model <- lm(y~x)
model <- lm(y1~x)
model
summary(model)
plot(x, y1)
abline(model)
coefs <- coef(model)
coefs
?abline
?I
head(women)
sunspot
data(sunspot)
class(coefs)
summary(coefs)
coefs(3)
?knn
??knn
?dist
?submet
?subset
?factor
library(class)
?knn
data(airquality)
head(airquality)
plot(airquality$Wind, airquality$Ozone)
?lm
true_error <- rnorm( 1000,0,2)
true_beta_0 <- 1.1
true_beta_1 <- -8.2
y <- true_beta_0 + true_beta_1* x_1 + true_error
hist( y) # plot p( y)
x_1 <- rnorm( 1000,5,7) # from a normal distribution simulate # 1000 values with a mean of 5 and # standard deviation of 7
hist( x_1, col ="grey") # plot p( x)
true_error <- rnorm( 1000,0,2)
true_beta_0 <- 1.1
true_beta_1 <- -8.2
y <- true_beta_0 + true_beta_1* x_1 + true_error
hist( y) # plot p( y)
lm(airquality$Ozone~airquality$Wind)
summary(lm(formula = airquality$Ozone ~ airquality$Wind))
?residual
lm(airquality$Ozone~(airquality$Wind)^2)
lm(airquality$Ozone~asis(airquality$Wind)^2)
?is
?as
lm(airquality$Ozone~as(airquality$Wind^2))
lm(airquality$Ozone~airquality$Wind)
coef <- lm(airquality$Ozone~airquality$Wind)
coef[1]
coef[2]
head(women)
women
plot(women$height, women$weight)
women_lr<-lm(women$weight~women$height)
women_lr
women_coefs<-coef(women_lr)
women_coefs
women_coefs[1]
women_coefs[2]
?coef
abline(coefs_demo[1], coefs_demo[2])
??knn
library(class)
?knn
# Class A cases
A1=c(0,0)
A2=c(1,1)
A3=c(2,2)
# Class B cases
B1=c(6,6)
B2=c(5.5,7)
B3=c(6.5,5)
# Build the classification matrix
train=rbind(A1,A2,A3, B1,B2,B3)
# Class labels vector (attached to each class instance)
cl=factor(c(rep("A",3),rep("B",3)))
# The object to be classified
test=c(4, 4)
# Load the class package that holds the knn() function
library(class)
# call knn() and get its summary
summary(knn(train, test, cl, k = 1))
- See more at: http://blog.webagesolutions.com/archives/1164#sthash.khwC4jRt.dpuf
cl
class(cl)
summary(cl)
knn(train, test, cl, k = 1)
?kmeans
?coef
class(iris)
iris
library(iris)
data(iris)
head(iris)
model <- lm(Sepal.Width ~ Sepal.Length)
model <- lm(Sepal$Width ~ Sepal$Length)
model <- lm(iris$Sepal.Width ~ iris$Sepal.Length)
lm
model
model[2]
summary(model)
plot(iris$Sepal.Length, iris$Sepal.Width)
abline(model)
abline(lm(iris$Sepal.Width ~ iris$Sepal.Length))
?knn
?coef
model <- lm(iris$Sepal.Width ~ iris$Sepal.Length)
coef(model)
summary(model)
model[2]
model[3]
?lm
setwd("~/GitHub/Coursera_Getting_and_Cleaning_Data/CourseAssignment")
# Merges the training and the test sets to create one data set.
xtest <- read.table('./UCI HAR Dataset/test/X_test.txt', header = FALSE)
ytest <- read.table('./UCI HAR Dataset/test/Y_test.txt', header = FALSE)
subjecttest <- read.table('./UCI HAR Dataset/test/subject_test.txt', header = FALSE)
test <- cbind(xtest, ytest, subjecttest)
xtrain <- read.table('./UCI HAR Dataset/train/X_train.txt', header = FALSE)
ytrain <- read.table('./UCI HAR Dataset/train/Y_train.txt', header = FALSE)
subjecttrain <- read.table('./UCI HAR Dataset/train/subject_train.txt', header = FALSE)
train <- cbind(xtrain, ytrain, subjecttrain)
combined <- rbind(test, train)
features <- read.table('./UCI HAR Dataset/features.txt', header = FALSE, stringsAsFactor = FALSE)
meanstd <- sort(c(grep("mean()", features[,2], fixed = TRUE), grep("std()", features[,2], fixed = TRUE)))
meanstdcombined  <- combined[,c(meanstd, 562, 563)]
# Uses descriptive activity names to name the activities in the data set
activity <- read.table('./UCI HAR Dataset/activity_labels.txt', header = FALSE)
meanstdcombined[,67] <- factor(meanstdcombined[,67], labels = activity[,2])
# Appropriately labels the data set with descriptive variable names.
names(meanstdcombined) <- c(features[meanstd,2], "activity", "subject")
test <- split(meanstdcombined, meanstdcombined$subject)
test2 <- lapply(test, function(x)
tapply(x, mean))
test2 <- lapply(test, function(x){
tapply(x, mean)}
)
traceback()
test2 <- lapply(test, function(x){
tapply(x, mean)}
)
temp <- test[1][1]
temp
temp <- test[1][1][1]
temp
temp <- test[[1]][1][1]
temp
test <- split(meanstdcombined, meanstdcombined$subject)
str(temp)
mean(temp)
mean(temp[2])
mean(temp[1])
mean(as.numeric(temp[1]))
mean(as.numeric(as.character(temp[1])))
as.numeric(as.character(temp[1]))
str(as.numeric(as.character(temp[1])))\
str(as.numeric(as.character(temp[1])))
as.numeric(as.character(temp[1]))
temp
temp <- test[1]
temp <- test[[1]]
View(temp)
aggregate(temp, temp$activity, mean)
aggregate(temp, by = temp$activity, mean)
aggregate(temp, by = activity, mean)
length(temp)
length(activty)
length(activity)
aggregate(temp, by = activity[2], mean)
activity[2]
activity[1]
activity[2]
aggregate(temp[1], by = activity[2], mean)
aggregate(temp, by = activity[2], mean)
aggregate(temp, by = list(activity[2]), mean)
aggregate(temp, by = activity[2], mean)
aggregate(temp, by = temp$activity, mean)
aggregate(temp, by = list(temp$activity), mean)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
aggregate(x, by = list(x$activity), mean)
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
aggregate(x, by = list(x$activity), mean)}
)
warnings()
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
head(x)
aggregate(x, by = list(x$activity), mean)}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
print(head(x))
aggregate(x, by = list(x$activity), mean)}
)
rm(test2)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
print(head(x))
test2 <- aggregate(x, by = list(x$activity), mean)}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
print(aggregate(x, by = list(x$activity), mean)})
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
print(aggregate(x, by = list(x$activity), mean))}
)
warnings()
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- print(aggregate(x, by = list(x$activity), mean))}
)
test2
unsplit(test2)
?unsplit
unsplit(test2, meanstdcombined$subject))
unsplit(test2, meanstdcombined$subject)
warnings()
rm(test2)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- rbind(test2, print(aggregate(x, by = list(x$activity), mean)))}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- print(aggregate(x, by = list(x$activity), mean))}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x, by = list(x$activity), mean)}
)
activity <- factors(activity)
activity <- factor(activity)
?factor
activity <- factor(activity, label = "")
activity <- is.factor(activity)
activity <- read.table('./UCI HAR Dataset/activity_labels.txt', header = FALSE)
test <- split(meanstdcombined, meanstdcombined$subject)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x, by = list(x$activity), mean)}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test3 <- aggregate(x, by = list(x$activity), mean)
test3}
)
head(warnings())
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test3 <- aggregate(x, by = list(x$activity), mean)
print(head(test3))}
)
test3 <- data.frame()
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test3 <- aggregate(x, by = list(x$activity), mean)
print(head(test3))}
)
aggregate(meanstdcombined, by = list(c(meanstdcombined$activity, meanstdcombined$subject)), mean)
aggregate(meanstdcombined, by = list(meanstdcombined$subject), mean)
aggregate(meanstdcombined, by = list(meanstdcombined$activity), mean)
aggregate(meanstdcombined[,1:66], by = list(meanstdcombined$activity), mean)
aggregate(meanstdcombined[,1:66], by = list(meanstdcombined$subject), mean)
aggregate(meanstdcombined[,1:66], by = list(meanstdcombined$subject, meanstdcombined$activity), mean)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x, by = list(x$activity), mean)
test2}
)
head(warnings())
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x, by = list(x$activity), mean)
print(head(test2))
test2}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x[1:66], by = list(x$activity), mean)
print(head(test2))
test2}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x[1:66], by = list(x$activity), mean)
test2 <- cbind(test2, activity[,2])
print(head(test2))
test2}
)
test2
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
test2 <- aggregate(x[1:66], by = list(x$activity), mean)
test2 <- cbind(test2, activity[,2])}
)
temp <- unsplit(test2, meanstdcombined$subject)
warnings()
View(temp)
temp <- unlist(test2, meanstdcombined$subject)
temp
temp <- as.data.frame(unlist(test2, meanstdcombined$subject))
temp
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
result <- aggregate(x[1:66], by = list(x$activity), mean)
#      result <- cbind(test2, activity[,2])}
)
test2 <- lapply(test, function(x){
#      tapply(x, mean)}
result <- aggregate(x[1:66], by = list(x$activity), mean)}
#      result <- cbind(test2, activity[,2])}
)
?write.table
write.table(temp, file = "output.txt", row.name = FALSE")
"
write.table(temp, file = "output.txt", row.name = FALSE)
write.table(test2, file = "output.txt", row.name = FALSE)
write.table(test2, file = "output.txt", row.name = FALSE)
length(test2)
for i in 1:length(test2){
output <- rbind(output, test2[[i]])
}
output <- data.frame()
for i in 1:length(test2){
output <- rbind(output, test2[[i]])
}
i = 0
output <- data.frame()
for i in 1:length(test2){
output <- rbind(output, test2[[i]])
}
head(test2[[1]])
for(i in 1:length(test2)){
output <- rbind(output, test2[[i]])
}
write.table(output, file = "output.txt", row.name = FALSE)
View(output)
for(i in 1:length(test2)){
output <- rbind(i, output, test2[[i]])
}
warnings()
temp <- cbind(i, test2[[i]])
temp
i = 0
output <- data.frame()
for(i in 1:length(test2)){
output <- rbind(output, temp)
temp <- cbind(i, test2[[i]])
}
View(output)
i = 0
output <- data.frame()
for(i in 1:length(test2)){
temp <- cbind(i, test2[[i]])
output <- rbind(output, temp)
}
View(output)
View(output)
output <- data.frame()
for(i in 1:length(test2)){
temp <- cbind(subject = i, test2[[i]])
output <- rbind(output, temp)
}
View(output)
i = 0
output <- data.frame()
for(i in 1:length(test2)){
temp <- cbind(subject = i, activity = test2[[i]][1], test2[[i]][:67])
output <- rbind(output, temp)
}
i = 0
output <- data.frame()
for(i in 1:length(test2)){
temp <- cbind(subject = i, activity = test2[[i]][1], test2[[i]][2:67])
output <- rbind(output, temp)
}
View(output)
View(temp)
names(output)[2] <- "activity"
View(output)
write.table(output, file = "output.txt", row.name = FALSE)
View(output)
output <- aggregate(meanstdcombined,
by = list(activity = meanstdcombined$activity, subject = meanstdcombined$subject),
mean)}
output <- aggregate(meanstdcombined,
by = list(activity = meanstdcombined$activity, subject = meanstdcombined$subject),
mean)
warnings()
View(meanstdcombined)
output <- aggregate(meanstdcombined,
by = list(activity = meanstdcombined$activity, subject = meanstdcombined$subject),
mean)
# Merges the training and the test sets to create one data set.
xtest <- read.table('./UCI HAR Dataset/test/X_test.txt', header = FALSE)
ytest <- read.table('./UCI HAR Dataset/test/Y_test.txt', header = FALSE)
subjecttest <- read.table('./UCI HAR Dataset/test/subject_test.txt', header = FALSE)
test <- cbind(xtest, ytest, subjecttest)
xtrain <- read.table('./UCI HAR Dataset/train/X_train.txt', header = FALSE)
ytrain <- read.table('./UCI HAR Dataset/train/Y_train.txt', header = FALSE)
subjecttrain <- read.table('./UCI HAR Dataset/train/subject_train.txt', header = FALSE)
train <- cbind(xtrain, ytrain, subjecttrain)
combined <- rbind(test, train)
# Add variables
features <- read.table('./UCI HAR Dataset/features.txt', header = FALSE, stringsAsFactor = FALSE)
# Extracts only the measurements on the mean and standard deviation for each measurement.
meanstd <- sort(c(grep("mean()", features[,2], fixed = TRUE), grep("std()", features[,2], fixed = TRUE)))
meanstdcombined  <- combined[,c(meanstd, 562, 563)]
# Uses descriptive activity names to name the activities in the data set
activity <- read.table('./UCI HAR Dataset/activity_labels.txt', header = FALSE)
meanstdcombined[,67] <- factor(meanstdcombined[,67], labels = activity[,2])
# Appropriately labels the data set with descriptive variable names.
names(meanstdcombined) <- c(features[meanstd,2], "activity", "subject")
output <- aggregate(meanstdcombined,
by = list(activity = meanstdcombined$activity, subject = meanstdcombined$subject),
mean)
output <- meanstdcombined[, lapply(.SD, mean), by = "activity, subject"]
output <- meanstdcombined[, lapply(.SD, mean), by = (meanstdcombined$activity, meanstdcombined$subject)]
library(data.table)
output <- meanstdcombined[, lapply(.SD, mean), by = (meanstdcombined$activity, meanstdcombined$subject)]
output <- meanstdcombined[, lapply(.SD, mean), by = "meanstdcombined$activity, meanstdcombined$subject"]
output <- meanstdcombined[, lapply(.SD, mean), by = "activity, subject"]
output <- aggregate(meanstdcombined,
by = list(activity = meanstdcombined$activity, subject = meanstdcombined$subject),
mean)
warnings()
View(meanstdcombined)
library(data.table)
# Merges the training and the test sets to create one data set.
xtest <- read.table('./UCI HAR Dataset/test/X_test.txt', header = FALSE)
ytest <- read.table('./UCI HAR Dataset/test/Y_test.txt', header = FALSE)
subjecttest <- read.table('./UCI HAR Dataset/test/subject_test.txt', header = FALSE)
test <- cbind(xtest, ytest, subjecttest)
xtrain <- read.table('./UCI HAR Dataset/train/X_train.txt', header = FALSE)
ytrain <- read.table('./UCI HAR Dataset/train/Y_train.txt', header = FALSE)
subjecttrain <- read.table('./UCI HAR Dataset/train/subject_train.txt', header = FALSE)
train <- cbind(xtrain, ytrain, subjecttrain)
combined <- rbind(test, train)
# Add variables
features <- read.table('./UCI HAR Dataset/features.txt', header = FALSE, stringsAsFactor = FALSE)
# Extracts only the measurements on the mean and standard deviation for each measurement.
meanstd <- sort(c(grep("mean()", features[,2], fixed = TRUE), grep("std()", features[,2], fixed = TRUE)))
meanstdcombined  <- combined[,c(meanstd, 562, 563)]
# Uses descriptive activity names to name the activities in the data set
activity <- read.table('./UCI HAR Dataset/activity_labels.txt', header = FALSE)
meanstdcombined[,67] <- factor(meanstdcombined[,67], labels = activity[,2])
# Appropriately labels the data set with descriptive variable names.
names(meanstdcombined) <- c(features[meanstd,2], "activity", "subject")
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
splitBySubj <- split(meanstdcombined, meanstdcombined$subject)
actAvg <- lapply(splitBySubj, function(x){
result <- aggregate(x[1:66], by = list(x$activity), mean)}
)
#recombine list
i = 0
output <- data.frame()
for(i in 1:length(actAvg)){
temp <- cbind(subject = i, test2[[i]])
output <- rbind(output, temp)
}
names(output)[2] <- "activity"
write.table(output, file = "output.txt", row.name = FALSE)
temp <- read.table("output.txt", header = TRUE)
View(temp)
